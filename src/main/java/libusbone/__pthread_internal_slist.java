package libusbone;
/**
 * <i>native declaration : /usr/include/bits/pthreadtypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class __pthread_internal_slist extends com.sun.jna.Structure {
	/// C type : __pthread_internal_slist*
	public libusbone.__pthread_internal_slist.ByReference __next;
	public __pthread_internal_slist() {
		super();
	}
	/// @param __next C type : __pthread_internal_slist*
	public __pthread_internal_slist(libusbone.__pthread_internal_slist.ByReference __next) {
		super();
		this.__next = __next;
	}
	protected ByReference newByReference() {
		ByReference s = new ByReference();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected ByValue newByValue() {
		ByValue s = new ByValue();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected __pthread_internal_slist newInstance() {
		__pthread_internal_slist s = new __pthread_internal_slist();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	public static class ByReference extends __pthread_internal_slist implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends __pthread_internal_slist implements com.sun.jna.Structure.ByValue {}
}
