package libusbone;
/**
 * \ingroup asyncio<br>
 * Setup packet for control transfers.<br>
 * <i>native declaration : /usr/include/limits.h:585</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libusb_control_setup extends com.sun.jna.Structure {
	/**
	 * Request type. Bits 0:4 determine recipient, see<br>
	 * \ref libusb_request_recipient. Bits 5:6 determine type, see<br>
	 * \ref libusb_request_type. Bit 7 determines data transfer direction, see<br>
	 * \ref libusb_endpoint_direction.
	 */
	public byte bmRequestType;
	/**
	 * Request. If the type bits of bmRequestType are equal to<br>
	 * \ref libusb_request_type::LIBUSB_REQUEST_TYPE_STANDARD<br>
	 * "LIBUSB_REQUEST_TYPE_STANDARD" then this field refers to<br>
	 * \ref libusb_standard_request. For other cases, use of this field is<br>
	 * application-specific.
	 */
	public byte bRequest;
	/// Value. Varies according to request
	public short wValue;
	/**
	 * Index. Varies according to request, typically used to pass an index<br>
	 * or offset
	 */
	public short wIndex;
	/// Number of bytes to transfer
	public short wLength;
	public libusb_control_setup() {
		super();
	}
	/**
	 * @param bmRequestType Request type. Bits 0:4 determine recipient, see<br>
	 * \ref libusb_request_recipient. Bits 5:6 determine type, see<br>
	 * \ref libusb_request_type. Bit 7 determines data transfer direction, see<br>
	 * \ref libusb_endpoint_direction.<br>
	 * @param bRequest Request. If the type bits of bmRequestType are equal to<br>
	 * \ref libusb_request_type::LIBUSB_REQUEST_TYPE_STANDARD<br>
	 * "LIBUSB_REQUEST_TYPE_STANDARD" then this field refers to<br>
	 * \ref libusb_standard_request. For other cases, use of this field is<br>
	 * application-specific.<br>
	 * @param wValue Value. Varies according to request<br>
	 * @param wIndex Index. Varies according to request, typically used to pass an index<br>
	 * or offset<br>
	 * @param wLength Number of bytes to transfer
	 */
	public libusb_control_setup(byte bmRequestType, byte bRequest, short wValue, short wIndex, short wLength) {
		super();
		this.bmRequestType = bmRequestType;
		this.bRequest = bRequest;
		this.wValue = wValue;
		this.wIndex = wIndex;
		this.wLength = wLength;
	}
	protected ByReference newByReference() {
		ByReference s = new ByReference();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected ByValue newByValue() {
		ByValue s = new ByValue();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected libusb_control_setup newInstance() {
		libusb_control_setup s = new libusb_control_setup();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	public static class ByReference extends libusb_control_setup implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends libusb_control_setup implements com.sun.jna.Structure.ByValue {}
}
